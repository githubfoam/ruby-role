---
version: 1.0.{build}
branches:
  # whitelist
  only:
    - appveyorbr
image:
  #- ubuntu1604
  - ubuntu1804
environment:
    distribution: centos
    init: /usr/lib/systemd/systemd
    version: 7
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  # - distribution: ubuntu
  #   init: /lib/systemd/systemd
  #   version: 1804
  #   run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
services:
  - docker
install:
build_script:
  - sh: ./DockerRedHatAppveyor.sh
  - sh: ./DockerDebianAppveyor.sh
# docker is built
# - 'sudo docker build --no-cache --rm --file=files/dockerfiles/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'
# # ansible role is tested within the container
# - container_id=$(mktemp)
# - role_name="ansible-role-apache2"
#   # Run container in detached state
# - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/${role_name}:ro ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}" '
#   # Ansible syntax check.
# - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=true ansible-playbook -v /etc/ansible/roles/${role_name}/tests/test.yml --syntax-check'
#
#   # Test role.
# - 'sudo docker exec  "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=true ansible-playbook  /etc/ansible/roles/${role_name}/tests/test.yml'
#
# # container is stopped and destroyed
# - 'sudo docker stop "$(cat ${container_id})" '
# - 'sudo docker rm -f "$(cat ${container_id})"'
test_script:
# test scripts must be here
build: off
# Notify Ansible Galaxy when an ansible role builds successfully.
notifications:
  - provider: Webhook
url: https://galaxy.ansible.com/api/v1/notifications/
